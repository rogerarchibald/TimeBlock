   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 119               	.global	timer0Init
 121               	timer0Init:
   1:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //
   2:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //  timer.c
   3:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //  
   4:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //
   5:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //  Created by Roger on 2016-05-23.
   6:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //
   7:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //
   8:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
   9:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include <avr/io.h>
  10:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include <avr/interrupt.h>
  11:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include <avr/sleep.h>
  12:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include "DOC_head.h"
  13:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include "timer.h"
  14:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** #include "adc.h"
  15:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  16:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** u8 numbers[] = {0xD7, 0x14, 0xE6, 0xB6, 0x35, 0xB3, 0xF3, 0x16, 0xF7, 0xB7, 0x00, 0xE1, 0xE1, 0xF0,
  17:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 digits[] = {0,0,0,0}; //these are actually the values of the 4 digits.  Will use these to
  18:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 placeholder = 0;  //will cycle from 0-3 and repeat.  Will determine which of the 4 P-ch F
  19:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 butstat = 0;	//will use this as a boolean to check the stat of the button.
  20:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 laststat = 0;	//will use this to check current vs previous status of the button to know i
  21:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 fallarm = 0;	//when the button has been detected hi for a minimum time (5mS) will set thi
  22:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 clockstat = clockrun;	//enumerated in header file.  will tell timer overflow isr what/how
  23:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u8 turnoff_arm = 1;	//will kill this when reading the ADC and then re-arm upon wakeup.
  24:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** static u16 cyclesinstat = 0;	//how many cycles have I been in this status
  25:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  26:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  27:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //initialize timer0 with a 200uS rollover to trigger an ISR
  28:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void timer0Init(void){
 123               	.LM0:
 124               	.LFBB1:
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
  29:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     OCR0A = timerroll;   //timerroll is defined in DOC_head.h depending on clock frequency
 130               	.LM1:
 131 0000 83E6      		ldi r24,lo8(99)
 132 0002 87BD      		out 0x27,r24
  30:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     TCCR0A = 0x02;  //set WGM for CTC mode with OCR0A as top
 134               	.LM2:
 135 0004 82E0      		ldi r24,lo8(2)
 136 0006 84BD      		out 0x24,r24
  31:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     TCCR0B = 0x02;  //set CS1 for /8 prescaler
 138               	.LM3:
 139 0008 85BD      		out 0x25,r24
  32:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     TIFR0 |= 0x02;  //clear the OCF0A overflow flag
 141               	.LM4:
 142 000a A99A      		sbi 0x15,1
  33:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     TIMSK0 |= 0x02; //Enable interrupts from Timer0 OverflowA
 144               	.LM5:
 145 000c EEE6      		ldi r30,lo8(110)
 146 000e F0E0      		ldi r31,0
 147 0010 8081      		ld r24,Z
 148 0012 8260      		ori r24,lo8(2)
 149 0014 8083      		st Z,r24
 150 0016 0895      		ret
 152               	.Lscope1:
 154               	.global	next_digit
 156               	next_digit:
  34:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     
  35:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }
  36:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  37:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  38:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  39:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  40:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //Timer0 CompareA Interrupt
  41:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** ISR(TIMER0_COMPA_vect)	{
  42:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     static u8 two_hun_mics = 0;
  43:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     static u16 two_milliseconds = 0;
  44:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
  45:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
  46:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
  47:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	butstat = (PINB & 0x01);
  48:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	if(butstat == laststat){
  49:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		cyclesinstat ++;
  50:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	} else{	//count how many times I've been in this status
  51:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		cyclesinstat = 0;
  52:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	} //reset counter if the status has changed.
  53:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	if ((cyclesinstat > 50) && laststat && turnoff_arm ){
  54:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		fallarm = 1;
  55:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		clockstat = clockrun;
  56:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	}	//if the button is hi and it's been hi for 50 cycles (50 x 200uS = 10mS), set it up so the next 
  57:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	if(fallarm && !butstat){		//if the button was armed and a falling edge was detected
  58:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	//	tog_tp1
  59:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		fallarm = 0;
  60:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		timeequals0();
  61:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		clockstat = clockoff;
  62:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
  63:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		if(turnoff_arm && !butstat && (cyclesinstat >= 0x2710))	//if the button has been low for 2 second
  64:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		{
  65:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			two_milliseconds = 0;	//reset the counter so next phase will be triggered 1 second later.
  66:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			display_batt();
  67:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			clockstat = batdisp;
  68:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			turnoff_arm = 0;	//don't come back until this is re-armed at wakeup
  69:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
  70:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	laststat = butstat;	//make sure laststat is up to speed for next round
  71:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  72:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
  73:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     two_hun_mics ++;
  74:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if (two_hun_mics >= intensity){ //once the intensity level is reached will kill the active LED
  75:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         PORTC|= 0x0F;  //this will set the 4 LSB's of Port C, ensuring all anodes are off
  76:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }   //end of checking intensity
  77:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     
  78:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if (two_hun_mics >= 10){
  79:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         next_digit();   //need to write function to cycle the 4 LSB's of PORTC to ensure that we're
  80:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         two_hun_mics = 0;   //reset this value for next round
  81:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         two_milliseconds ++;    //if I've made it through 20 cycles of 100uS, increment the 2mS cnt
  82:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
  83:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }   //end of 2mS cycle
  84:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     
  85:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
  86:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(two_milliseconds >=500){
  87:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			if(clockstat == clockrun){
  88:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				inc_seconds();  
  89:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			}else if (clockstat == batdisp){	//end of if clockstat = clockrun
  90:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				display_volts (read_ADC());
  91:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				clockstat = voltdisp; 
  92:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			}else if(clockstat == voltdisp){
  93:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				if(butstat && (cyclesinstat >= 0x2710)){	//if the button is released and has been for more than
  94:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				setsleepstat(1);
  95:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				}
  96:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				}
  97:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
  98:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		two_milliseconds = 0;
  99:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 100:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
 101:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }	//end of ISR
 102:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 103:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 104:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 105:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //this function will cycle the anodes of the diodes and turn the appropriate anode on (turning it o
 106:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void next_digit(void){
 158               	.LM6:
 159               	.LFBB2:
 160 0018 CF93      		push r28
 161 001a DF93      		push r29
 162 001c 00D0      		rcall .
 163 001e 00D0      		rcall .
 164 0020 CDB7      		in r28,__SP_L__
 165 0022 DEB7      		in r29,__SP_H__
 166               	/* prologue: function */
 167               	/* frame size = 4 */
 168               	/* stack size = 6 */
 169               	.L__stack_usage = 6
 107:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 108:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	u8 dig_array[] = {0x04, 0x02, 0x01, 0x08};  //array to cycle through the different anodes
 171               	.LM7:
 172 0024 84E0      		ldi r24,lo8(4)
 173 0026 8983      		std Y+1,r24
 174 0028 82E0      		ldi r24,lo8(2)
 175 002a 8A83      		std Y+2,r24
 176 002c 81E0      		ldi r24,lo8(1)
 177 002e 8B83      		std Y+3,r24
 178 0030 88E0      		ldi r24,lo8(8)
 179 0032 8C83      		std Y+4,r24
 109:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     placeholder ++;
 181               	.LM8:
 182 0034 8091 0000 		lds r24,placeholder
 183 0038 8F5F      		subi r24,lo8(-(1))
 110:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(placeholder >= 4){
 185               	.LM9:
 186 003a 8430      		cpi r24,lo8(4)
 187 003c 00F4      		brsh .L3
 109:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     placeholder ++;
 189               	.LM10:
 190 003e 8093 0000 		sts placeholder,r24
 191 0042 00C0      		rjmp .L4
 192               	.L3:
 111:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         placeholder = 0;
 194               	.LM11:
 195 0044 1092 0000 		sts placeholder,__zero_reg__
 196               	.L4:
 112:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 113:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     PORTD = numbers[digits[placeholder]];   //set up bjts on cathodes.
 198               	.LM12:
 199 0048 E091 0000 		lds r30,placeholder
 200 004c F0E0      		ldi r31,0
 201 004e E050      		subi r30,lo8(-(digits))
 202 0050 F040      		sbci r31,hi8(-(digits))
 203 0052 E081      		ld r30,Z
 204 0054 F0E0      		ldi r31,0
 205 0056 E050      		subi r30,lo8(-(numbers))
 206 0058 F040      		sbci r31,hi8(-(numbers))
 207 005a 8081      		ld r24,Z
 208 005c 8BB9      		out 0xb,r24
 114:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
 115:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
 116:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****  switch (clockstat){	//this switch will determine the colon/decimal place
 210               	.LM13:
 211 005e 8091 0000 		lds r24,clockstat
 212 0062 8130      		cpi r24,lo8(1)
 213 0064 01F0      		breq .L6
 214 0066 8330      		cpi r24,lo8(3)
 215 0068 01F0      		breq .L7
 216 006a 00C0      		rjmp .L5
 217               	.L6:
 117:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	 case clockrun:
 118:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		if(digits[0] & 0x01){  //if we've got an odd number
 219               	.LM14:
 220 006c 8091 0000 		lds r24,digits
 221 0070 80FF      		sbrs r24,0
 222 0072 00C0      		rjmp .L5
 223 0074 00C0      		rjmp .L11
 224               	.L7:
 119:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			PORTD |= 0x08;
 120:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}	//set the colon when we have an odd number
 121:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
 122:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		break;
 123:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
 124:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		case voltdisp:
 125:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		if (placeholder == 2){
 226               	.LM15:
 227 0076 8091 0000 		lds r24,placeholder
 228 007a 8230      		cpi r24,lo8(2)
 229 007c 01F4      		brne .L5
 230               	.L11:
 126:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			PORTD |= 0x08;
 232               	.LM16:
 233 007e 5B9A      		sbi 0xb,3
 234               	.L5:
 127:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
 128:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		break;
 129:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
 130:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	}	//end of switch
 131:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 132:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     PORTC &= ~(dig_array[placeholder]);    //enable the appropriate anode by clearing the Gate of t
 236               	.LM17:
 237 0080 98B1      		in r25,0x8
 238 0082 8091 0000 		lds r24,placeholder
 239 0086 FE01      		movw r30,r28
 240 0088 E80F      		add r30,r24
 241 008a F11D      		adc r31,__zero_reg__
 242 008c 8181      		ldd r24,Z+1
 243 008e 8095      		com r24
 244 0090 8923      		and r24,r25
 245 0092 88B9      		out 0x8,r24
 246               	/* epilogue start */
 133:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 134:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }   //end of next_digit function
 248               	.LM18:
 249 0094 0F90      		pop __tmp_reg__
 250 0096 0F90      		pop __tmp_reg__
 251 0098 0F90      		pop __tmp_reg__
 252 009a 0F90      		pop __tmp_reg__
 253 009c DF91      		pop r29
 254 009e CF91      		pop r28
 255 00a0 0895      		ret
 260               	.Lscope2:
 262               	.global	inc_seconds
 264               	inc_seconds:
 135:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 136:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 137:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 138:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //function to actually increment the time.
 139:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void inc_seconds(void){
 266               	.LM19:
 267               	.LFBB3:
 268               	/* prologue: function */
 269               	/* frame size = 0 */
 270               	/* stack size = 0 */
 271               	.L__stack_usage = 0
 140:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	
 141:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     digits[0] ++;
 273               	.LM20:
 274 00a2 8091 0000 		lds r24,digits
 275 00a6 8F5F      		subi r24,lo8(-(1))
 142:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(digits[0] >= 10){
 277               	.LM21:
 278 00a8 8A30      		cpi r24,lo8(10)
 279 00aa 00F4      		brsh .L14
 141:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(digits[0] >= 10){
 281               	.LM22:
 282 00ac 8093 0000 		sts digits,r24
 283 00b0 00C0      		rjmp .L15
 284               	.L14:
 143:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[0] = 0;
 286               	.LM23:
 287 00b2 1092 0000 		sts digits,__zero_reg__
 144:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[1]++;
 289               	.LM24:
 290 00b6 8091 0000 		lds r24,digits+1
 291 00ba 8F5F      		subi r24,lo8(-(1))
 292 00bc 8093 0000 		sts digits+1,r24
 293               	.L15:
 145:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 146:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(digits[1] >= 6){
 295               	.LM25:
 296 00c0 8091 0000 		lds r24,digits+1
 297 00c4 8630      		cpi r24,lo8(6)
 298 00c6 00F0      		brlo .L16
 147:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[1] = 0;
 300               	.LM26:
 301 00c8 1092 0000 		sts digits+1,__zero_reg__
 148:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****          digits[2]++;
 303               	.LM27:
 304 00cc 8091 0000 		lds r24,digits+2
 305 00d0 8F5F      		subi r24,lo8(-(1))
 306 00d2 8093 0000 		sts digits+2,r24
 307               	.L16:
 149:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 150:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(digits[2] >= 10){
 309               	.LM28:
 310 00d6 8091 0000 		lds r24,digits+2
 311 00da 8A30      		cpi r24,lo8(10)
 312 00dc 00F0      		brlo .L17
 151:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[2] = 0;
 314               	.LM29:
 315 00de 1092 0000 		sts digits+2,__zero_reg__
 152:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[3] ++;
 317               	.LM30:
 318 00e2 8091 0000 		lds r24,digits+3
 319 00e6 8F5F      		subi r24,lo8(-(1))
 320 00e8 8093 0000 		sts digits+3,r24
 321               	.L17:
 153:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 154:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if(digits[3] >= 10){
 323               	.LM31:
 324 00ec 8091 0000 		lds r24,digits+3
 325 00f0 8A30      		cpi r24,lo8(10)
 326 00f2 00F0      		brlo .L13
 155:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         digits[3] = 0;
 328               	.LM32:
 329 00f4 1092 0000 		sts digits+3,__zero_reg__
 330               	.L13:
 331 00f8 0895      		ret
 333               	.Lscope3:
 335               	.global	timeequals0
 337               	timeequals0:
 156:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 157:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }
 158:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 159:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 160:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 161:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 162:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 163:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void timeequals0 (void){
 339               	.LM33:
 340               	.LFBB4:
 341               	/* prologue: function */
 342               	/* frame size = 0 */
 343               	/* stack size = 0 */
 344               	.L__stack_usage = 0
 345               	.LBB2:
 164:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	for(int i = 0; i < 4; i++){
 165:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		digits[i] = 0;
 347               	.LM34:
 348 00fa E0E0      		ldi r30,lo8(digits)
 349 00fc F0E0      		ldi r31,hi8(digits)
 350 00fe 1082      		st Z,__zero_reg__
 351 0100 1182      		std Z+1,__zero_reg__
 352 0102 1282      		std Z+2,__zero_reg__
 353 0104 1382      		std Z+3,__zero_reg__
 354 0106 0895      		ret
 355               	.LBE2:
 357               	.Lscope4:
 359               	.global	shut_r_down
 361               	shut_r_down:
 166:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	}
 167:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }
 168:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 169:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 170:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 171:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void shut_r_down(void){
 363               	.LM35:
 364               	.LFBB5:
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 172:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	timeequals0();
 370               	.LM36:
 371 0108 0E94 0000 		call timeequals0
 173:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	TCCR0B = 0;		//kill timer
 373               	.LM37:
 374 010c 15BC      		out 0x25,__zero_reg__
 174:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	PORTD = 0;		//turn off NPNs
 376               	.LM38:
 377 010e 1BB8      		out 0xb,__zero_reg__
 175:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	PORTC |= 0x0F;	//turn off P-ch
 379               	.LM39:
 380 0110 88B1      		in r24,0x8
 381 0112 8F60      		ori r24,lo8(15)
 382 0114 88B9      		out 0x8,r24
 176:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	set_sleep_mode(SLEEP_MODE_PWR_DOWN);	//going to deep sleep
 384               	.LM40:
 385 0116 83B7      		in r24,0x33
 386 0118 817F      		andi r24,lo8(-15)
 387 011a 8460      		ori r24,lo8(4)
 388 011c 83BF      		out 0x33,r24
 177:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	PCIFR |= 0x01;	//clear interrupt flag
 390               	.LM41:
 391 011e D89A      		sbi 0x1b,0
 178:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	PCICR |= 0x01;	//enable Pin Change Interrupt
 393               	.LM42:
 394 0120 E8E6      		ldi r30,lo8(104)
 395 0122 F0E0      		ldi r31,0
 396 0124 8081      		ld r24,Z
 397 0126 8160      		ori r24,lo8(1)
 398 0128 8083      		st Z,r24
 179:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	sleep_mode();
 400               	.LM43:
 401 012a 83B7      		in r24,0x33
 402 012c 8160      		ori r24,lo8(1)
 403 012e 83BF      		out 0x33,r24
 404               	/* #APP */
 405               	 ;  179 "/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr
 406 0130 8895      		sleep
 407               		
 408               	 ;  0 "" 2
 409               	/* #NOAPP */
 410 0132 83B7      		in r24,0x33
 411 0134 8E7F      		andi r24,lo8(-2)
 412 0136 83BF      		out 0x33,r24
 180:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	asm ("nop");
 414               	.LM44:
 415               	/* #APP */
 416               	 ;  180 "/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr
 417 0138 0000      		nop
 418               	 ;  0 "" 2
 181:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	PCICR = 0;	//disable PC Interrupt
 420               	.LM45:
 421               	/* #NOAPP */
 422 013a 1082      		st Z,__zero_reg__
 182:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	set_sleep_mode(SLEEP_MODE_IDLE);	//change back to IDLE
 424               	.LM46:
 425 013c 83B7      		in r24,0x33
 426 013e 817F      		andi r24,lo8(-15)
 427 0140 83BF      		out 0x33,r24
 183:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	clockstat = clockrun;	//arming for post-reset
 429               	.LM47:
 430 0142 81E0      		ldi r24,lo8(1)
 431 0144 8093 0000 		sts clockstat,r24
 184:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	fallarm = 0;
 433               	.LM48:
 434 0148 1092 0000 		sts fallarm,__zero_reg__
 185:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	turnoff_arm = 1;
 436               	.LM49:
 437 014c 8093 0000 		sts turnoff_arm,r24
 186:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	cyclesinstat = 0;
 439               	.LM50:
 440 0150 1092 0000 		sts cyclesinstat+1,__zero_reg__
 441 0154 1092 0000 		sts cyclesinstat,__zero_reg__
 187:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	setsleepstat(0);
 443               	.LM51:
 444 0158 80E0      		ldi r24,0
 445 015a 0E94 0000 		call setsleepstat
 188:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	TCCR0B |= 0x02;	//re-enable clock
 447               	.LM52:
 448 015e 85B5      		in r24,0x25
 449 0160 8260      		ori r24,lo8(2)
 450 0162 85BD      		out 0x25,r24
 451 0164 0895      		ret
 453               	.Lscope5:
 455               	.global	display_batt
 457               	display_batt:
 189:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }
 190:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 191:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //this just puts 'batt' across the display.  Will be called for 1 second prior to displaying the ac
 192:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void display_batt(void){
 459               	.LM53:
 460               	.LFBB6:
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 465               	.LBB3:
 193:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		for (int i = 11; i < 15; i ++){
 194:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			digits[(i-11)] = i;
 467               	.LM54:
 468 0166 E0E0      		ldi r30,lo8(digits)
 469 0168 F0E0      		ldi r31,hi8(digits)
 470 016a 8BE0      		ldi r24,lo8(11)
 471 016c 8083      		st Z,r24
 472 016e 8CE0      		ldi r24,lo8(12)
 473 0170 8183      		std Z+1,r24
 474 0172 8DE0      		ldi r24,lo8(13)
 475 0174 8283      		std Z+2,r24
 476 0176 8EE0      		ldi r24,lo8(14)
 477 0178 8383      		std Z+3,r24
 478 017a 0895      		ret
 479               	.LBE3:
 481               	.Lscope6:
 484               	.global	display_volts
 486               	display_volts:
 195:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
 196:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** }
 197:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 198:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 199:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 200:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** void display_volts (u16 adval){
 488               	.LM55:
 489               	.LFBB7:
 490               	/* prologue: function */
 491               	/* frame size = 0 */
 492               	/* stack size = 0 */
 493               	.L__stack_usage = 0
 201:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 202:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** //this is will display the voltage...want to play with displaying the 'batt'	
 203:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** adval /= 10;		//drop to x.yz volts.  will allow me to use the bottom of the colon as decimal place 
 495               	.LM56:
 496 017c 2AE0      		ldi r18,lo8(10)
 497 017e 30E0      		ldi r19,0
 498 0180 B901      		movw r22,r18
 499 0182 0E94 0000 		call __udivmodhi4
 500 0186 CB01      		movw r24,r22
 204:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	digits[0] = adval % 10;
 502               	.LM57:
 503 0188 E0E0      		ldi r30,lo8(digits)
 504 018a F0E0      		ldi r31,hi8(digits)
 505 018c B901      		movw r22,r18
 506 018e 0E94 0000 		call __udivmodhi4
 507 0192 8083      		st Z,r24
 205:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	adval /= 10;
 206:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	digits [1] = adval %10;
 509               	.LM58:
 510 0194 CB01      		movw r24,r22
 511 0196 B901      		movw r22,r18
 512 0198 0E94 0000 		call __udivmodhi4
 513 019c 8183      		std Z+1,r24
 207:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	adval /= 10;
 208:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	digits [2] = adval %10;
 515               	.LM59:
 516 019e CB01      		movw r24,r22
 517 01a0 B901      		movw r22,r18
 518 01a2 0E94 0000 		call __udivmodhi4
 519 01a6 8283      		std Z+2,r24
 209:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	digits [3] = 10;	//10 is all off
 521               	.LM60:
 522 01a8 8AE0      		ldi r24,lo8(10)
 523 01aa 8383      		std Z+3,r24
 524 01ac 0895      		ret
 526               	.Lscope7:
 528               	.global	__vector_14
 530               	__vector_14:
  41:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     static u8 two_hun_mics = 0;
 532               	.LM61:
 533               	.LFBB8:
 534 01ae 1F92      		push r1
 535 01b0 0F92      		push r0
 536 01b2 0FB6      		in r0,__SREG__
 537 01b4 0F92      		push r0
 538 01b6 1124      		clr __zero_reg__
 539 01b8 0F93      		push r16
 540 01ba 1F93      		push r17
 541 01bc 2F93      		push r18
 542 01be 3F93      		push r19
 543 01c0 4F93      		push r20
 544 01c2 5F93      		push r21
 545 01c4 6F93      		push r22
 546 01c6 7F93      		push r23
 547 01c8 8F93      		push r24
 548 01ca 9F93      		push r25
 549 01cc AF93      		push r26
 550 01ce BF93      		push r27
 551 01d0 CF93      		push r28
 552 01d2 EF93      		push r30
 553 01d4 FF93      		push r31
 554               	/* prologue: Signal */
 555               	/* frame size = 0 */
 556               	/* stack size = 18 */
 557               	.L__stack_usage = 18
  47:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	if(butstat == laststat){
 559               	.LM62:
 560 01d6 C3B1      		in r28,0x3
 561 01d8 C170      		andi r28,lo8(1)
 562 01da C093 0000 		sts butstat,r28
  48:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		cyclesinstat ++;
 564               	.LM63:
 565 01de 2091 0000 		lds r18,laststat
 566 01e2 C213      		cpse r28,r18
 567 01e4 00C0      		rjmp .L24
  49:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	} else{	//count how many times I've been in this status
 569               	.LM64:
 570 01e6 8091 0000 		lds r24,cyclesinstat
 571 01ea 9091 0000 		lds r25,cyclesinstat+1
 572 01ee 0196      		adiw r24,1
 573 01f0 9093 0000 		sts cyclesinstat+1,r25
 574 01f4 8093 0000 		sts cyclesinstat,r24
 575 01f8 00C0      		rjmp .L25
 576               	.L24:
  51:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	} //reset counter if the status has changed.
 578               	.LM65:
 579 01fa 1092 0000 		sts cyclesinstat+1,__zero_reg__
 580 01fe 1092 0000 		sts cyclesinstat,__zero_reg__
 581               	.L25:
  53:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		fallarm = 1;
 583               	.LM66:
 584 0202 0091 0000 		lds r16,cyclesinstat
 585 0206 1091 0000 		lds r17,cyclesinstat+1
 586 020a 0333      		cpi r16,51
 587 020c 1105      		cpc r17,__zero_reg__
 588 020e 00F0      		brlo .L26
  53:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		fallarm = 1;
 590               	.LM67:
 591 0210 2223      		tst r18
 592 0212 01F0      		breq .L26
  53:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		fallarm = 1;
 594               	.LM68:
 595 0214 8091 0000 		lds r24,turnoff_arm
 596 0218 8823      		tst r24
 597 021a 01F0      		breq .L26
  54:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		clockstat = clockrun;
 599               	.LM69:
 600 021c 81E0      		ldi r24,lo8(1)
 601 021e 8093 0000 		sts fallarm,r24
  55:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	}	//if the button is hi and it's been hi for 50 cycles (50 x 200uS = 10mS), set it up so the next 
 603               	.LM70:
 604 0222 8093 0000 		sts clockstat,r24
 605               	.L26:
  57:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	//	tog_tp1
 607               	.LM71:
 608 0226 8091 0000 		lds r24,fallarm
 609 022a 8823      		tst r24
 610 022c 01F0      		breq .L27
  57:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 	//	tog_tp1
 612               	.LM72:
 613 022e C111      		cpse r28,__zero_reg__
 614 0230 00C0      		rjmp .L27
  59:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		timeequals0();
 616               	.LM73:
 617 0232 1092 0000 		sts fallarm,__zero_reg__
  60:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		clockstat = clockoff;
 619               	.LM74:
 620 0236 0E94 0000 		call timeequals0
  61:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
 622               	.LM75:
 623 023a 1092 0000 		sts clockstat,__zero_reg__
 624               	.L27:
  63:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		{
 626               	.LM76:
 627 023e 8091 0000 		lds r24,turnoff_arm
 628 0242 8823      		tst r24
 629 0244 01F0      		breq .L28
  63:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		{
 631               	.LM77:
 632 0246 C111      		cpse r28,__zero_reg__
 633 0248 00C0      		rjmp .L28
  63:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		{
 635               	.LM78:
 636 024a 0031      		cpi r16,16
 637 024c 1742      		sbci r17,39
 638 024e 00F0      		brlo .L28
  65:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			display_batt();
 640               	.LM79:
 641 0250 1092 0000 		sts two_milliseconds.1759+1,__zero_reg__
 642 0254 1092 0000 		sts two_milliseconds.1759,__zero_reg__
  66:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			clockstat = batdisp;
 644               	.LM80:
 645 0258 0E94 0000 		call display_batt
  67:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			turnoff_arm = 0;	//don't come back until this is re-armed at wakeup
 647               	.LM81:
 648 025c 82E0      		ldi r24,lo8(2)
 649 025e 8093 0000 		sts clockstat,r24
  68:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		}
 651               	.LM82:
 652 0262 1092 0000 		sts turnoff_arm,__zero_reg__
 653               	.L28:
  70:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 655               	.LM83:
 656 0266 C093 0000 		sts laststat,r28
  73:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     if (two_hun_mics >= intensity){ //once the intensity level is reached will kill the active LED
 658               	.LM84:
 659 026a 8091 0000 		lds r24,two_hun_mics.1758
 660 026e 8F5F      		subi r24,lo8(-(1))
 661 0270 8093 0000 		sts two_hun_mics.1758,r24
  74:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         PORTC|= 0x0F;  //this will set the 4 LSB's of Port C, ensuring all anodes are off
 663               	.LM85:
 664 0274 8230      		cpi r24,lo8(2)
 665 0276 00F0      		brlo .L29
  75:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }   //end of checking intensity
 667               	.LM86:
 668 0278 88B1      		in r24,0x8
 669 027a 8F60      		ori r24,lo8(15)
 670 027c 88B9      		out 0x8,r24
 671               	.L29:
  78:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         next_digit();   //need to write function to cycle the 4 LSB's of PORTC to ensure that we're
 673               	.LM87:
 674 027e 8091 0000 		lds r24,two_hun_mics.1758
 675 0282 8A30      		cpi r24,lo8(10)
 676 0284 00F0      		brlo .L30
  79:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         two_hun_mics = 0;   //reset this value for next round
 678               	.LM88:
 679 0286 0E94 0000 		call next_digit
  80:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****         two_milliseconds ++;    //if I've made it through 20 cycles of 100uS, increment the 2mS cnt
 681               	.LM89:
 682 028a 1092 0000 		sts two_hun_mics.1758,__zero_reg__
  81:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 		
 684               	.LM90:
 685 028e 8091 0000 		lds r24,two_milliseconds.1759
 686 0292 9091 0000 		lds r25,two_milliseconds.1759+1
 687 0296 0196      		adiw r24,1
 688 0298 9093 0000 		sts two_milliseconds.1759+1,r25
 689 029c 8093 0000 		sts two_milliseconds.1759,r24
 690               	.L30:
  86:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			if(clockstat == clockrun){
 692               	.LM91:
 693 02a0 8091 0000 		lds r24,two_milliseconds.1759
 694 02a4 9091 0000 		lds r25,two_milliseconds.1759+1
 695 02a8 843F      		cpi r24,-12
 696 02aa 9140      		sbci r25,1
 697 02ac 00F0      		brlo .L23
  87:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				inc_seconds();  
 699               	.LM92:
 700 02ae 8091 0000 		lds r24,clockstat
 701 02b2 8130      		cpi r24,lo8(1)
 702 02b4 01F4      		brne .L32
  88:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			}else if (clockstat == batdisp){	//end of if clockstat = clockrun
 704               	.LM93:
 705 02b6 0E94 0000 		call inc_seconds
 706 02ba 00C0      		rjmp .L33
 707               	.L32:
  89:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				display_volts (read_ADC());
 709               	.LM94:
 710 02bc 8230      		cpi r24,lo8(2)
 711 02be 01F4      		brne .L34
  90:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				clockstat = voltdisp; 
 713               	.LM95:
 714 02c0 0E94 0000 		call read_ADC
 715 02c4 0E94 0000 		call display_volts
  91:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 			}else if(clockstat == voltdisp){
 717               	.LM96:
 718 02c8 83E0      		ldi r24,lo8(3)
 719 02ca 8093 0000 		sts clockstat,r24
 720 02ce 00C0      		rjmp .L33
 721               	.L34:
  92:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				if(butstat && (cyclesinstat >= 0x2710)){	//if the button is released and has been for more than
 723               	.LM97:
 724 02d0 8330      		cpi r24,lo8(3)
 725 02d2 01F4      		brne .L33
  93:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				setsleepstat(1);
 727               	.LM98:
 728 02d4 8091 0000 		lds r24,butstat
 729 02d8 8823      		tst r24
 730 02da 01F0      		breq .L33
  93:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				setsleepstat(1);
 732               	.LM99:
 733 02dc 8091 0000 		lds r24,cyclesinstat
 734 02e0 9091 0000 		lds r25,cyclesinstat+1
 735 02e4 8031      		cpi r24,16
 736 02e6 9742      		sbci r25,39
 737 02e8 00F0      		brlo .L33
  94:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 				}
 739               	.LM100:
 740 02ea 81E0      		ldi r24,lo8(1)
 741 02ec 0E94 0000 		call setsleepstat
 742               	.L33:
  98:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c ****     }
 744               	.LM101:
 745 02f0 1092 0000 		sts two_milliseconds.1759+1,__zero_reg__
 746 02f4 1092 0000 		sts two_milliseconds.1759,__zero_reg__
 747               	.L23:
 748               	/* epilogue start */
 101:/Users/Roger/Library/Mobile Documents/com~apple~CloudDocs/Firmwares/XAVR/DOC_xavr/DOC_xavr/timer.c **** 
 750               	.LM102:
 751 02f8 FF91      		pop r31
 752 02fa EF91      		pop r30
 753 02fc CF91      		pop r28
 754 02fe BF91      		pop r27
 755 0300 AF91      		pop r26
 756 0302 9F91      		pop r25
 757 0304 8F91      		pop r24
 758 0306 7F91      		pop r23
 759 0308 6F91      		pop r22
 760 030a 5F91      		pop r21
 761 030c 4F91      		pop r20
 762 030e 3F91      		pop r19
 763 0310 2F91      		pop r18
 764 0312 1F91      		pop r17
 765 0314 0F91      		pop r16
 766 0316 0F90      		pop r0
 767 0318 0FBE      		out __SREG__,r0
 768 031a 0F90      		pop r0
 769 031c 1F90      		pop r1
 770 031e 1895      		reti
 776               	.Lscope8:
 777               		.local	two_hun_mics.1758
 778               		.comm	two_hun_mics.1758,1,1
 779               		.local	two_milliseconds.1759
 780               		.comm	two_milliseconds.1759,2,1
 781               		.local	cyclesinstat
 782               		.comm	cyclesinstat,2,1
 783               		.data
 786               	turnoff_arm:
 787 0000 01        		.byte	1
 790               	clockstat:
 791 0001 01        		.byte	1
 792               		.local	fallarm
 793               		.comm	fallarm,1,1
 794               		.local	laststat
 795               		.comm	laststat,1,1
 796               		.local	butstat
 797               		.comm	butstat,1,1
 798               		.local	placeholder
 799               		.comm	placeholder,1,1
 800               		.local	digits
 801               		.comm	digits,4,1
 802               	.global	numbers
 805               	numbers:
 806 0002 D7        		.byte	-41
 807 0003 14        		.byte	20
 808 0004 E6        		.byte	-26
 809 0005 B6        		.byte	-74
 810 0006 35        		.byte	53
 811 0007 B3        		.byte	-77
 812 0008 F3        		.byte	-13
 813 0009 16        		.byte	22
 814 000a F7        		.byte	-9
 815 000b B7        		.byte	-73
 816 000c 00        		.byte	0
 817 000d E1        		.byte	-31
 818 000e E1        		.byte	-31
 819 000f F0        		.byte	-16
 820 0010 F1        		.byte	-15
 830               		.text
 832               	.Letext0:
 833               		.ident	"GCC: (GNU) 4.9.3"
 834               	.global __do_copy_data
 835               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:121    .text:0000000000000000 timer0Init
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:156    .text:0000000000000018 next_digit
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:797    .bss:0000000000000008 placeholder
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:799    .bss:0000000000000009 digits
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:805    .data:0000000000000002 numbers
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:790    .data:0000000000000001 clockstat
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:264    .text:00000000000000a2 inc_seconds
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:337    .text:00000000000000fa timeequals0
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:361    .text:0000000000000108 shut_r_down
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:782    .bss:0000000000000005 fallarm
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:786    .data:0000000000000000 turnoff_arm
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:780    .bss:0000000000000003 cyclesinstat
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:457    .text:0000000000000166 display_batt
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:486    .text:000000000000017c display_volts
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:530    .text:00000000000001ae __vector_14
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:795    .bss:0000000000000007 butstat
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:793    .bss:0000000000000006 laststat
/var/folders/5n/sn67s4dx5cj3x2ns4qywc93r0000gn/T//ccbLjqp4.s:778    .bss:0000000000000001 two_milliseconds.1759
                             .bss:0000000000000000 two_hun_mics.1758

UNDEFINED SYMBOLS
setsleepstat
__udivmodhi4
read_ADC
__do_copy_data
__do_clear_bss
